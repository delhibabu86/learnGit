


const fieldAttributes;


const store = createStore(reducers, initialState, applyMiddleware(saga));
saga.run(sagaDTID);

const EditContainer = connect(stateToProps, mapDispatchToProps)(EditComponent);

export default class EditDTID extends PureComponent {
    static propTypes = {
      match: shape({
        params: shape({
          editId: string,
        }).isRequired,
      }).isRequired,
      history: shape({
        push: func,
      }).isRequired,
    };
  componentDidMount() {
    const { editId } = this.props.match.params;
    const originalChangedData = settingsChangeData(settingsData);
    if (isEmpty(editId)) {
      // If no edit Id is provided, then go to new screen
      this.props.history.push('/NewDTID');
    } else {
      // Clear changed tracking
      store.dispatch(changedInit(cloneDeep(originalChangedData)));
    }
  }


  render() {
    return (
      <Provider store={store}>
        <div>
          <EditContainer />
        </div>
      </Provider>
    );
  }
}
